// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Libreria.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509022910_PostgreSQL")]
    partial class PostgreSQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPais")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Libreria.Modelos.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("integer");

                    b.Property<int?>("AutorId")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadEjemplares")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadPaginas")
                        .HasColumnType("integer");

                    b.Property<int?>("EditorialId")
                        .HasColumnType("integer");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdAutor")
                        .HasColumnType("integer");

                    b.Property<int>("IdEditorial")
                        .HasColumnType("integer");

                    b.Property<int>("IdPais")
                        .HasColumnType("integer");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("EditorialId");

                    b.HasIndex("PaisId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Autores")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Editoriales")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Libro", b =>
                {
                    b.HasOne("Libreria.Modelos.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId");

                    b.HasOne("Libreria.Modelos.Editorial", "Editorial")
                        .WithMany("Libros")
                        .HasForeignKey("EditorialId");

                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Libros")
                        .HasForeignKey("PaisId");

                    b.Navigation("Autor");

                    b.Navigation("Editorial");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Pais", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Editoriales");

                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
